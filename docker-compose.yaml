services:
  postgres:
    image: postgres:17.3
    container_name: database
    hostname: database
    environment:
      POSTGRES_DB: ${DATABASE_DB}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5
    ports:
      - ${DATABASE_EXPOSE_PORT}:5432
    volumes:
      - database-data:/var/lib/postgresql/data
    restart: always
  redis:
    image: redis:7.4.2
    container_name: redis
    hostname: redis
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5
    ports:
      - ${REDIS_EXPOSE_PORT}:6379
    volumes:
      - redis-data:/data
    restart: always
  rabbitmq:
    image: rabbitmq:4.0.3-management-alpine
    container_name: rabbitmq
    ports:
      - ${RABBITMQ_PORT}:5672
      - ${RABBITMQ_UI_PORT}:15672
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    healthcheck:
      test: rabbitmq-diagnostics -q status
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5
  mysql:
    image: mysql:8.0.42
    restart: "no"
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: backend
    healthcheck:
      test: mysqladmin ping -u root -p $$MYSQL_ROOT_PASSWORD
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5
  mongo:
    image: mongo:8.0.9
    restart: "no"
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: backend
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongosh admin -u $$MONGO_INITDB_ROOT_USERNAME -p $$MONGO_INITDB_ROOT_PASSWORD --quiet | grep 1
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5
volumes:
  database-data:
  rabbitmq-data:
  redis-data:
  mysql_data:
  mongo_data:
